$.extend({
	
	Ini : {
		  url : window.location.href.replace(/\/admin[^ ]+/, '/admin/files/'),
	  postKey : 'thefile',
	    finfo : {finfo: true},
	   simple : {simple_config: true},
		   
		   mb : 1048576,
		   kb : 1049,
		   
		  msg : {
			  1 : ' - данный тип файла неподдерживается.',
			  2 : 'Размер файла - ', /**unused*/
			  3 : 'MB.',
			  4 : '%',
			  5 : 'Прервано пользователем',
			  6 : 'KB.',
			  7 : '',
			  8 : ' успешно загружен.',
			  9 : 'Произошла ошибка.'
		  },
		  
		/**Errors*/  
		errCont : 'div.upload-manager-err',
		  errEl : 'div.alert-danger:hidden',
	   errTxtEl : 'span[data-error]',
	     errRem : 'div.alert-danger',
		 
		/**Files*/
		     fI : 'form#kas-upload-form input[type=file]',
		   fTag : '<input  id="file" type="file" value name="file" multiple />',
			 fL : 'div.upload-manager-list',
		  fLImg : 'img[data-l-img]',
		  fList : 'div.upload-manager-list tbody',
	   fListTab : 'div.upload-manager-list table',
	      fTmpl : 'div.upload-manager-list .table tr:hidden',
		    fEl : 'div.upload-manager-list .table tr:visible',
		  fNum	: 'td[data-num]',
		  fName : 'td[data-file] > div',
		  fProg : 'section[data-progress] div.progress-bar',
		  fAria : 'aria-valuenow',
		  fSize : 'td[data-fsize]',
		  fWait : 'td[data-wait]',
		fCansel : 'button[data-cansel]',
	      fComp : 'div[data-download-complete]:hidden',
	  fCompAttr : 'data-download-complete',
	   fCompMsg : 'os-p[data-msg]',
	         fW : 'upload-manager-wrapper',
		
			req : {},
		 UMform : ''
	}
	
});

(function($){
$.fn.fileUploadManager = function(url) 
{		
	var content$ = this;
	
	if 
	(
		typeof url == 'string'	&&
		url.length > 4
	){
		$.Ini.url = url;
	}
	
	if (!content$.length)  {
		return;
	}	
		 
	/*content$.append($.Ini.UMform);*/		
	if(!$($.Ini.fI).length) {
		return;
	}	
	
	$('.upload-manager-close')
		.on('click', function(){
			$('.' + $.Ini.fW).remove();
			return;
		});
	
	$($.Ini.fI).on('change', function() {
		UploadManager(this.files);
	});			
}  
})(jQuery);

function UMencodeFormData(data) 
{
	if (!data) return "";
	var pairs = [], 
		value; 

	for(var name in data) 
	{
		if (!data.hasOwnProperty(name)) continue; 
		if (typeof data[name] === "function") continue; 
		
		value  = data[name].toString(); 
		name   = encodeURIComponent(name.replace("%20", "+")); 
		value  = encodeURIComponent(value.replace("%20", "+"));
		pairs.push(name + "=" + value);
	}
	
	return pairs.join('&'); 
}

function UMstartUpload(file, key) 
{	
	var num = parseInt(key) + 1;
		
	if (!file) return;
	if (typeof key !== 'number') return;		
	
	$($.Ini.fLImg).hide();
	$($.Ini.fL).css({'min-height' : 0});
	
	$.Ini.req[num] = new XMLHttpRequest();
	var req = $.Ini.req[num];
	
	req.open('POST', $.Ini.url);
	
	//Indicators
	req.upload.onprogress = function(e)
	{	
		
		var tot = e.total, fix = 2, untD = 0, 
			untT = '', fSize = '', fProg = '', 
			fListEl = '';
				  
		var fEl = $($.Ini.fTmpl).clone();	
		
		switch(tot.toString().length > 6) 
		{
			case true:
				untD = $.Ini.mb;
				untT = 3;
			break;
			
			case false:
				untD = $.Ini.kb;
				untT = 6; 
			break;
		}
		
		tot = parseFloat(parseInt(e.total)/untD);
		
		fProg = Math.round(e.loaded/e.total*100);
		fSize = tot.toFixed(fix)+$.Ini.msg[untT];
			
		/**Find from list*/
		fListEl = $('table').find('tr:has(td[data-num='+num+'])');
		
		switch($(fListEl).length > 0) 
		{
			case true :
						
				fEl = fListEl; 			
				/**Add progress*/
				$(fEl).find($.Ini.fProg).css({'width': fProg+$.Ini.msg[4]});
				$(fEl).find($.Ini.fProg).attr($.Ini.fAria, fProg);		
						
			break;
			
			case false :
				
				/**Add number*/
				$(fEl).find($.Ini.fNum).text(num).attr('data-num', num);
				
				/**Add filename*/
				$(fEl).find($.Ini.fName).text(file.name);
				
				/**Add progress*/
				$(fEl).find($.Ini.fProg).css({'width': fProg+$.Ini.msg[4]});
				$(fEl).find($.Ini.fProg).attr($.Ini.fAria, fProg);
				
				/**Add size*/
				$(fEl).find($.Ini.fSize).text(fSize);
				
				/**Add to list*/
				$($.Ini.fList).append(fEl);
				$(fEl).fadeIn(300);
				
			break;			
		}	
					
	}	
	
	//ADD FILES
	var formData = new FormData();
	formData.append($.Ini.postKey, file);
	
	req.send(formData);	
	
	/**
	 * File upload on server
	*/
	req.onreadystatechange = function() 
	{		
		if (req.readyState == 4) 
		{	
			
			var data     = parseInt(req.responseText);
			var fComp$   = $($.Ini.fComp).clone();
			
			console.log(req.responseText);
			
			$($.Ini.fEl+':has(div['+$.Ini.fAria+'=100])')
			.fadeOut(500, function(){
				$(this).remove();
			});			
			
			if (data == 1) 
			{				
				fComp$.find($.Ini.fCompMsg).text(file.name+$.Ini.msg[8]);
				$($.Ini.errCont).append(fComp$);
				fComp$.fadeIn(500);
				return;
			}			
			
			if (data == 0) {
				UMerr(file.name + $.Ini.msg[1]);	
				return false;
			}
			
		}
	}
	
	return false;
}

function UMupload(file, key) 
{		
	var fileObj = {
		name : file.name, 
		size : file.size, 
		type : file.type,
	};
	
	
	/**
	 * Access control.
	*/
	$.post($.Ini.url, fileObj).done(function(data)
	{
		if (parseInt(data) == 0)
		{
			UMerr(file.name + $.Ini.msg[1]);
			return;
		}
		
		
		UMstartUpload(file, key);
			
	});
		
}

function UploadManager(files) {
	
	UMlock();
	
	if (typeof files !== 'object');
		
	$($.Ini.fL).css({'min-height' : 150});	
	$($.Ini.fLImg).show();
	$($.Ini.fListTab).show();		
	
	$(files).each(function(key, file){
		UMupload(file, key);	
	});	
	
	UMifAllReqComplete();	
}

function UMlock() 
{
	$($.Ini.fI).attr('disabled', 'disabled');
	
	$($.Ini.fI)
	.closest('a')
	.css({
		'background' : '#E1E1E1', 
		'opacity' : '.6', 
		'border' : '1px solid #ACACAC'
	});
}

function UMunlock() 
{
	$($.Ini.fI).val('');
	$($.Ini.fI).removeAttr('disabled');
	$($.Ini.fI).closest('a').attr('style','');
}

function UMifAllReqComplete() 
{	
	var check;
	check = setInterval(function(){
		
		if ($($.Ini.fEl).length !== 0) 
		{				
			$($.Ini.fEl+':has(div['+$.Ini.fAria+'=100])')
			.find($.Ini.fWait).animate({opacity: 1}, 500);
			return;			
		}
			
		$.Ini.req = {};	
		UMunlock();
		
		$($.Ini.fL).removeAttr('style');
		$($.Ini.fListTab).hide();			
			
		clearInterval(check);		
		
	}, 2000);
			
}

function UMerr(msg) 
{
	var errEl = $($.Ini.errEl).clone();
	
	!msg ? msg = $.Ini.msg[9] : false;
			    		
	$(errEl).find($.Ini.errTxtEl).text(msg);
	$($.Ini.errCont).append(errEl);
			
	$(errEl).fadeIn(500);
	return;
}

function UMerrClose(e) {
	$(e.target).closest($.Ini.errRem).remove();
	return; 
}

function UMcansel(e) 
{	
	var el  = $(e.target).closest('tr'),
	    c   = $('form span[data-count]'),	
	    num = el
		     .closest('tr')
			 .find('td[data-num]')
			 .attr('data-num');	
	
	if (!num || !c.text()) return;
	
	$.Ini.req[parseInt(num)].abort();	
	$(el).remove();
	c.text(parseInt(c.text()) - 1);
	
	return;
}
